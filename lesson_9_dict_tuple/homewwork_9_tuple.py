"""1. Создайте кортеж из пяти элементов (разных типов данных).
Выведите на экран второй элемент и последний элемент этого кортежа."""
# new_tuple = (100, "python", [14, 17, "test"], True, {"age": 25})
# print(new_tuple[1])
# print(new_tuple[-1])


"""2. Дан кортеж чисел:
nums = (4, 7, 2, 9, 4, 1, 7, 4, 3, 9)
Выведите количество вхождений числа 4 в этом кортеже.
Найдите индекс первого вхождения числа 7."""
# nums = (4, 7, 2, 9, 4, 1, 7, 4, 3, 9)
# print(nums.count(4))
# print(nums.index(7))


"""3. Преобразуйте следующий список в кортеж:
lst = ["Python", "Java", "C++", "JavaScript"]
После преобразования проверьте, присутствует ли в кортеже элемент "C++"."""
# lst = ["Python", "Java", "C++", "JavaScript"]
# result = tuple(lst)
# print(result)
# print("C++" in result)


"""4. Создайте кортеж с числами от 1 до 10.
Используя срезы, выведите:
Первые три элемента.
Последние три элемента.
Все элементы с шагом 2."""
# test_tuple = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
# res1 = test_tuple[0:3]
# print(res1)
# res2 = test_tuple[7:]
# print(res2)
# res3 = test_tuple[::-2]
# print(res3)


"""5. Создайте кортеж, содержащий вложенные список и словарь.
Попробуйте изменить список внутри кортежа, добавив в него новый элемент."""
# Создаем более сложный кортеж с разными типами изменяемых объектов
complex_tuple = (
    [1, 2, 3],                          # список
    {"users": ["John", "Jane"]},         # словарь со списком внутри
    {"data": {"scores": [10, 20, 30]}}, # вложенный словарь
    ("вложенный", "кортеж")             # кортеж внутри кортежа
)

print("Сложный кортеж:")
print(complex_tuple)

# Изменяем список на первом уровне
complex_tuple[0].append(4)

# Изменяем список внутри словаря
complex_tuple[1]["users"].append("Bob")

# Изменяем список внутри вложенного словаря
complex_tuple[2]["data"]["scores"].append(40)

print("\nПосле всех изменений:")
print(complex_tuple)